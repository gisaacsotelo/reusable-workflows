# ^ BASICS: Share data between Jobs and Steps
name: Basics
on:
  workflow_call:
    inputs:
      str_input:
        description: 'Input String'
        required: true
        type: string
      # stringified_JSON:
      #   description: 'Stringified JSON'
      #   required: true
        # type: string
env:
  MY_WORKFLOW_VARIABLE: 'This data can only be accesed by this workflow'
    # secrets:
    #   SONAR_TOKEN:
    #     required: true
    #   AZURE_ARTIFACTS_TOKEN:
    #     required: true  

jobs:
  job1:
    name: Label - job1
    runs-on: ubuntu-latest
    outputs:
      # $ variable_name: ${{ steps.[step_id].outputs.[output_name] }}
      job1_output: ${{ steps.step1.outputs.step_output }}
      job1_input_output: ${{ steps.step1.outputs.input_output }}
    steps:
      - name: Print Input
        id: step1
        run: |
          echo "---------------------------------------"
          echo "----------------- INPUTS --------------"
          # * input variable 
          # This one can just be accesed anywhere in the workflow this way:
          echo "Input recieved: ${{ inputs.str_input }}"
          echo "---------------------------------------"
          # * local variable
          echo "Creating a local data variable..."
          # ? Create local variable (bash):
          # ? variable_name="value"
          local_data_variable='This is my data variable'
          # * output variable
          echo "Declaring outputs..."
          my_input_var=${{ inputs.str_input }}
          # $ echo "output_name=${output_value}" >> $GITHUB_OUTPUT
          echo "step_output=$my_input_var=" >> $GITHUB_OUTPUT
          echo "input_output=${{ inputs.str_input }}=" >> $GITHUB_OUTPUT
          # * environment variable
          echo "Declaring an environment variable from inside the job... "
          # $ echo "{environment_variable_name}={value}" >> $GITHUB_ENV
          echo MY_WORKFLOW_VARIABLE_2="Purple" >> $GITHUB_ENV
          MY_WORKFLOW_VARIABLE_3="Foo"
          echo "MY_WORFLOW_VARIABLE_3=MY_WORKFLOW_VARIABLE_3"  >> $GITHUB_ENV
          # * secret
          # The only way to get secrets is through github itself by definig them there, this data will
          # be encrypted and remain secure, either repo or org level.
          echo "---------------------------------------"
          echo "----------------- PRINTS --------------"
          # * outputs in the same job
          echo "Print variables"
          echo "Input: ${{ inputs.str_input }}"
          echo "Local variable: $local_data_variable"
          # * Outputs testing:
          echo "Print from output stored variable"
          echo "From variable same step: $step_output"
          echo "Step Output: ${{ steps.step1.outputs.step_output }}"
          echo "varible: $output_name"
          # * Environment:
          echo "Print env workflow-level: $MY_WORKFLOW_VARIABLE" 
          echo "Print env job-level: $MY_WORKFLOW_VARIABLE_2"
          echo "Print env job-level: $MY_WORKFLOW_VARIABLE_3"
          echo "---------------------------------------"

      
      - name: Label - Step 2 - Manipulation & Outputs
        run: |
          echo "---------------------------------------"
          echo "Variable: $data_variable"
          echo "Step Output: ${{ steps.step1.outputs.step_output }}"
          echo "---------------------------------------"

  job2:
    name: Label - job2
    needs: job1
    runs-on: ubuntu-latest
    steps:
      - name: Step 1 - Job 2
        run: |
          echo "P2: ${{ needs.job1.outputs.step_output }}"