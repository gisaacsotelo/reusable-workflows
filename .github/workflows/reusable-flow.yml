# REUSABLE WORKFLOW
# Sending data between steps and string manipulation

name: Main-flow
on:
  workflow_call:
    inputs:
      path:
        required: true
        type: string
      path-matrix:
        required: true
        type: string

jobs:

  # ~ SONARCLOUD SCAN
  debug:
    name: Debug
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        solution-matrix: ${{ fromJSON(inputs.path-matrix) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Print
        run: |
          echo "-----------------------------------------------"
          input="${{ inputs.path-matrix }}"
          echo "Input: $input"
          echo "-----------------------------------------------"
          echo "Matrix: ${{ matrix.solution-matrix }}"
          echo "-----------------------------------------------"
          root_input="$(echo ${{ matrix.solution-matrix }} | cut -d'/' -f1)"
          project_input="$(echo ${{ matrix.solution-matrix }} | cut -d'/' -f2)"
          solution_input="$(echo ${{ matrix.solution-matrix }} | cut -d'/' -f3)"
          echo "ROOT: ${root_input}"
          echo "PROJECT: ${project_input}"
          echo "SOLUTION: ${solution_input}"
          echo "-----------------------------------------------"
          echo "-----------------------------------------------"

      - name: Scan
        run: |
          echo "--------------------OK-------------------------"
          echo "-----------------------------------------------"
          echo "ROOT: ${root_input}"
          echo "PROJECT: ${project_input}"
          echo "SOLUTION: ${solution_input}"
          echo "-----------------------------------------------"
          echo "-----------------------------------------------"



  # job1:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Setup Data
  #       id: setup
  #       run: |
  #         echo "-----------------------------------------------"
  #         input="${{ inputs.path-matrix }}"
  #         echo "Input: $input"
  #         echo "-----------------------------------------------"

  #         echo "-----------------------------------------------"











  # ~ SETUP
  # job1:
  #   name: setup
  #   runs-on: ubuntu-latest
  #   # outputs:
  #   #   output1: ${{ steps.outputs.outputs.test }}
  #   #   output2: ${{ steps.outputs.outputs.test1 }}
  #   #   ROOT_DIR: ${{ steps.outputs.outputs.ROOT_DIR}}
  #   #   PROJECT_DIR: ${{ steps.outputs.outputs.PROJECT_DIR}}
  #   structure: ${{ steps.structure.outputs.structure }}

  #   steps:
  #     - name: Set Structure of Scan
  #       id: structure
  #       run: |
  #         echo "----------------------------------------------"
  #         input_string="${{ inputs.path }}"
  #         echo "Input Recieved: ${input_string}"
  #         echo "----------------------------------------------"
  #         single_path="$(echo ${{ inputs.path }} | cut -d' ' -f1)"
  #         echo "Single path: ${single_path}"
  #         echo "----------------------------------------------"
  #         solution_dir="$(echo ${single_path} | cut -d '/' -f3)"
  #         echo "solution_dir: ${solution_dir}"
  #         if [ ${solution_dir} == "" ]; then
  #           repo_structure="standard"
  #           echo "structure: ${repo_structure}"
  #         else
  #           repo_structure="mono"
  #           echo "structure: ${repo_structure}"
  #         fi
  #         echo "----------------------------------------------"
  #         echo "structure=${repo_structure}" >> $GITHUB_OUTPUT

  #     - name: Set Array
  #       id: outputs
  #       run: |
  #         echo "----------------------------------------------"
  #         input_string="${{ inputs.path }}"
  #         echo "Input Recieved: ${input_string}"
  #         echo "----------------------------------------------"
  #         single_path="$(echo ${{ inputs.path }} | cut -d' ' -f1)"
  #         echo "Single path: ${single_path}"
  #         echo "----------------------------------------------"
  #         solution_dir="$(echo ${single_path} | cut -d '/' -f3)"
  #         echo "solution_dir: ${solution_dir}"
  #         if [ ${solution_dir} == "" ]; then
  #           repo_structure="standard"
  #           echo "structure: ${repo_structure}"
  #         else
  #           repo_structure="mono"
  #           echo "structure: ${repo_structure}"
  #         fi
  #         echo "----------------------------------------------"
  #         echo "structure=${repo_structure}" >> $GITHUB_OUTPUT